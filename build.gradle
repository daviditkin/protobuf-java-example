/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ditkin' at '9/26/16 5:49 PM' with Gradle 3.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


mainClassName = 'com.example.tutorial.AddPerson'

idea {
	module {
		sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java");
		// If you have additional sourceSets and/or codegen plugins, add all of them
		sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/grpc");
	}
}

// In this section you declare the dependencies for your production and test code
dependencies {
	compile 'com.google.protobuf:protobuf-java-util:3.0.0'
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
